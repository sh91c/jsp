/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.35
 * Generated at: 2020-07-10 00:51:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._10_005feasyUI;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class grid_005fcommons_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("   <meta charset=\"UTF-8\">\n");
      out.write("   <title>Insert title here</title>\n");
      out.write("   <style>\n");
      out.write("      body {\n");
      out.write("         margin:0px; padding:0px;\n");
      out.write("      }\n");
      out.write("      #wrap {\n");
      out.write("         width:100%; height:400px;\n");
      out.write("         clear:both;\n");
      out.write("      }\n");
      out.write("      .grpcommon {\n");
      out.write("         width:40%; height:400px;\n");
      out.write("         padding:10px;\n");
      out.write("         background-color: lightgray;\n");
      out.write("         float:left;\n");
      out.write("      }\n");
      out.write("      .common {\n");
      out.write("         width:60%; height:400px;\n");
      out.write("         padding:10px;\n");
      out.write("         background-color: lightgray;\n");
      out.write("         float:left;\n");
      out.write("      }\n");
      out.write("   </style>\n");
      out.write("   <link rel=\"stylesheet\" type=\"text/css\" href=\"../css/easyui.css\">\n");
      out.write("   <link rel=\"stylesheet\" type=\"text/css\" href=\"../css/icon.css\">\n");
      out.write("   <link rel=\"stylesheet\" type=\"text/css\" href=\"css\">\n");
      out.write("   <script src=\"https://code.jquery.com/jquery-3.5.0.js\"></script>\n");
      out.write("   <script type=\"text/javascript\" src=\"../js/jquery.min.js\"></script>\n");
      out.write("   <script type=\"text/javascript\" src=\"../js/jquery.easyui.min.js\"></script>\n");
      out.write("   <script>\n");
      out.write("      $(document).ready (\n");
      out.write("         function() {\n");
      out.write("            \n");
      out.write("         }      \n");
      out.write("      );\n");
      out.write("      \n");
      out.write("      var editIndex = undefined;\n");
      out.write("      function endEditing(){\n");
      out.write("            if (editIndex == undefined){\n");
      out.write("               return true;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            if ($('#dg').datagrid('validateRow', editIndex)){\n");
      out.write("                $('#dg').datagrid('endEdit', editIndex);\n");
      out.write("                editIndex = undefined;\n");
      out.write("                return true; // 수정 완료 -> 커서가 수정하는 로우에서 빠져나옴\n");
      out.write("            }\n");
      out.write("            else {\n");
      out.write("                return false;\n");
      out.write("            }\n");
      out.write("        } // 수정을 끝냈는지 확인하는 함수\n");
      out.write("      \n");
      out.write("      function onClickCell(index, field){\n");
      out.write("            if (editIndex != index){\n");
      out.write("                if (endEditing()){\n");
      out.write("                    $('#dg').datagrid('selectRow', index)\n");
      out.write("                            .datagrid('beginEdit', index);\n");
      out.write("                    var ed = $('#dg').datagrid('getEditor', {index:index,field:field});\n");
      out.write("                    if (ed){\n");
      out.write("                        ($(ed.target).data('textbox') ? $(ed.target).textbox('textbox') : $(ed.target)).focus();\n");
      out.write("                    }\n");
      out.write("                    editIndex = index;\n");
      out.write("                }\n");
      out.write("                else {\n");
      out.write("                    setTimeout(function(){\n");
      out.write("                        $('#dg').datagrid('selectRow', editIndex);\n");
      out.write("                    },0);\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("      \n");
      out.write("        function onEndEdit(index, row){\n");
      out.write("        \tif(row.status != 'P'){\n");
      out.write("        \t\trow.status = 'U';\n");
      out.write("        \t}\n");
      out.write("        \tif(row.status == 'P'){\n");
      out.write("        \t\trow.grp_id = '';\n");
      out.write("        \t}\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function append(){\n");
      out.write("            if (endEditing()){\n");
      out.write("                $('#dg').datagrid('appendRow',{status:'P'});\n");
      out.write("                editIndex = $('#dg').datagrid('getRows').length-1;\n");
      out.write("                $('#dg').datagrid('selectRow', editIndex)\n");
      out.write("                        .datagrid('beginEdit', editIndex);\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function removeit(){\n");
      out.write("            if (editIndex == undefined){return}\n");
      out.write("            $('#dg').datagrid('cancelEdit', editIndex)\n");
      out.write("                    .datagrid('deleteRow', editIndex);\n");
      out.write("            editIndex = undefined;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function saveit(){\n");
      out.write("            if (endEditing()){\n");
      out.write("            \tvar appendJsons = [];\n");
      out.write("            \tvar updateJsons = [];\n");
      out.write("            \tvar deleteJsons = [];\n");
      out.write("            \t\n");
      out.write("            \tvar rows = $('#dg').datagrid('getChanges');\n");
      out.write("            \t\n");
      out.write("            \tfor (var i = 0; i < rows.length; i++) {\n");
      out.write("\t\t\t\t\t// 1. append\n");
      out.write("\t\t\t\t\tif(rows[i].status == 'P'){\n");
      out.write("\t\t\t\t\t\t// 추가된 데이터 ROW들의 JSON 배열\n");
      out.write("\t\t\t\t\t\tappendJsons.push(rows[i]);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t// 2. update\n");
      out.write("\t\t\t\t\telse if(rows[i].status == 'U'){\n");
      out.write("\t\t\t\t\t\tupdateJsons.push(rows[i]);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\t// 3. delete\n");
      out.write("\t\t\t\t\telse{\n");
      out.write("\t\t\t\t\t\tdeleteJsons.push(rows[i]);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t}\n");
      out.write("            \t\n");
      out.write("                $('#dg').datagrid('acceptChanges');\n");
      out.write("\t\t\t\t\n");
      out.write("                appendJsons = JSON.stringify(appendJsons);\n");
      out.write("                updateJsons = JSON.stringify(updateJsons);\n");
      out.write("                deleteJsons = JSON.stringify(deleteJsons);\n");
      out.write("                grpSaveAjax(appendJsons, updateJsons, deleteJsons);\n");
      out.write("                \n");
      out.write("                \n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function reject(){\n");
      out.write("            $('#dg').datagrid('rejectChanges');\n");
      out.write("            editIndex = undefined;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function getChanges(){\n");
      out.write("            var rows = $('#dg').datagrid('getChanges');\n");
      out.write("            alert(rows.length+' rows are changed!');\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function grpSaveAjax(appendJsons, updateJsons, deleteJsons){\n");
      out.write("        \t$.ajax({\n");
      out.write("        \t\turl      : './Datas/saveGrpCom.jsp',\n");
      out.write("        \t\ttype     : 'POST',\n");
      out.write("        \t\tdata     : 'append=' + appendJsons + '&update=' + updateJsons + '&delete=' + deleteJsons,\n");
      out.write("        \t\tdatatype : 'JSON',\n");
      out.write("        \t\tsuccess  : function(datas){\n");
      out.write("        \t\t\t$('#dg').datagrid();\n");
      out.write("        \t\t},\n");
      out.write("        \t\terror    : function(){\n");
      out.write("        \t\t\talert('grpSaveAjax() err!')\n");
      out.write("        \t\t}\n");
      out.write("        \t});\t\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function onSelect(index, row){\n");
      out.write("        \tvar selectedGrpId = row.grp_id;\n");
      out.write("        \t\n");
      out.write("        \t$('#dg2').datagrid({\n");
      out.write("       \t\t\turl:'./Datas/getCommons.jsp?grp_id=' + selectedGrpId,\n");
      out.write("                method:'get'\n");
      out.write("        \t});\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        /////////////////////////////////////////////////////\n");
      out.write("        /////////////////////////////////////////////////////\n");
      out.write("        /////////////////////////////////////////////////////\n");
      out.write("        \n");
      out.write("        var editIndex2 = undefined;\n");
      out.write("     \tfunction endEditing2(){\n");
      out.write("            if (editIndex2 == undefined){\n");
      out.write("               return true;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            if ($('#dg2').datagrid('validateRow', editIndex2)){\n");
      out.write("                $('#dg2').datagrid('endEdit', editIndex2);\n");
      out.write("                editIndex2 = undefined;\n");
      out.write("                return true; // 수정 완료 -> 커서가 수정하는 로우에서 빠져나옴\n");
      out.write("            }\n");
      out.write("            else {\n");
      out.write("                return false;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function onClickCell2(index, field){\n");
      out.write("            if (editIndex2 != index){\n");
      out.write("                if (endEditing2()){\n");
      out.write("                    $('#dg2').datagrid('selectRow', index)\n");
      out.write("                             .datagrid('beginEdit', index);\n");
      out.write("                    var ed = $('#dg2').datagrid('getEditor', {index:index,field:field});\n");
      out.write("                    if (ed){\n");
      out.write("                        ($(ed.target).data('textbox') ? $(ed.target).textbox('textbox') : $(ed.target)).focus();\n");
      out.write("                    }\n");
      out.write("                    editIndex2 = index;\n");
      out.write("                }\n");
      out.write("                else {\n");
      out.write("                    setTimeout(function(){\n");
      out.write("                        $('#dg2').datagrid('selectRow', editIndex2);\n");
      out.write("                    },0);\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        var selectedRow = {};\n");
      out.write("        function onSelect2(index, row){\n");
      out.write("        \tselectedRow.index = index;\n");
      out.write("        \tselectedRow.com_lvl = Number(row.com_lvl);\n");
      out.write("        \tselectedRow.grp_id = row.grp_id;\n");
      out.write("        \tselectedRow.com_id = row.com_id;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function append2(){\n");
      out.write("            if (endEditing2()){\n");
      out.write("                //$('#dg2').datagrid('appendRow',{status:'P'});\n");
      out.write("                editIndex2 = selectedRow.index;\n");
      out.write("                \n");
      out.write("                $('#dg2').datagrid('insertRow', {\n");
      out.write("                \tindex : editIndex2 + 1,\n");
      out.write("                \trow   : {\n");
      out.write("                \t\tgrp_id  : selectedRow.grp_id,\n");
      out.write("                \t\tcom_id  : '',\n");
      out.write("                \t\tcom_val : '',\n");
      out.write("                \t\tcom_lvl : selectedRow.com_lvl + 1,\n");
      out.write("                \t\tparent_id : selectedRow.com_id,\n");
      out.write("                \t\tstatus  : 'P'\n");
      out.write("                \t}\n");
      out.write("                });\n");
      out.write("                /*\n");
      out.write("                editIndex2 = $('#dg2').datagrid('getRows').length-1;\n");
      out.write("                $('#dg2').datagrid('selectRow', editIndex2)\n");
      out.write("                         .datagrid('beginEdit', editIndex2);\n");
      out.write("                */\n");
      out.write("                $('#dg2').datagrid('selectRow', editIndex2 + 1)\n");
      out.write("                \t\t .datagrid('beginEdit', editIndex2 + 1);\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function removeit2(){\n");
      out.write("            if (editIndex2 == undefined){return}\n");
      out.write("            $('#dg2').datagrid('cancelEdit', editIndex2)\n");
      out.write("                    .datagrid('deleteRow', editIndex2);\n");
      out.write("            editIndex2 = undefined;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        \n");
      out.write("        function reject2(){\n");
      out.write("            $('#dg2').datagrid('rejectChanges');\n");
      out.write("            editIndex2 = undefined;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function onEndEdit2(index, row){\n");
      out.write("        \tif(row.status != 'P'){\n");
      out.write("        \t\trow.status = 'U';\n");
      out.write("        \t\trow.parent_id = '';\n");
      out.write("        \t}\n");
      out.write("        \tif(row.status == 'P'){\n");
      out.write("        \t\trow.com_id = 'DB생성';\n");
      out.write("        \t}\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function saveit2(){\n");
      out.write("        \tvar appendRows = [];\n");
      out.write("        \tvar updateRows = [];\n");
      out.write("        \tvar deleteRows = [];\n");
      out.write("        \tvar jsonDatas  = {};\n");
      out.write("        \t\n");
      out.write("            if (endEditing2()){\n");
      out.write("            \tvar rows = $('#dg2').datagrid('getChanges');\n");
      out.write("            \t$.each( rows, function(index, item){\n");
      out.write("            \t\tif(item.status == 'P'){\n");
      out.write("            \t\t\tappendRows.push(item);\n");
      out.write("            \t\t}\n");
      out.write("            \t\telse if(item.status == 'U'){\n");
      out.write("            \t\t\tupdateRows.push(item);\n");
      out.write("            \t\t}\n");
      out.write("            \t\telse{\n");
      out.write("            \t\t\tdeleteRows.push(item);\n");
      out.write("            \t\t}\n");
      out.write("            \t});\n");
      out.write("            \t\n");
      out.write("            \tjsonDatas.appended = appendRows;\n");
      out.write("            \tjsonDatas.updated  = updateRows;\n");
      out.write("            \tjsonDatas.deleted  = deleteRows;  // -> jsonDatas = { appended : [], updated : [], deleted: [] };\n");
      out.write("            \t\n");
      out.write("            \t$('#dg2').datagrid('acceptChanges');\n");
      out.write("            \tvar strJSON = JSON.stringify(jsonDatas);\n");
      out.write("            \tgrpSaveAjax2(strJSON);\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function grpSaveAjax2(jsonDatas){\n");
      out.write("        \t$.ajax({\n");
      out.write("        \t\turl      : './Datas/saveCommon.jsp',\n");
      out.write("        \t\ttype     : 'POST',\n");
      out.write("        \t\tdata     : 'jsonDatas=' + jsonDatas,\n");
      out.write("        \t\tdatatype : 'JSON',\n");
      out.write("        \t\tsuccess  : function(datas){\n");
      out.write("        \t\t\t$('#dg2').datagrid();\n");
      out.write("        \t\t},\n");
      out.write("        \t\terror    : function(){\n");
      out.write("        \t\t\talert('grpSaveAjax2() err!');\n");
      out.write("        \t\t}\n");
      out.write("        \t});\t\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        \n");
      out.write("   </script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("   <div id=\"wrap\">\n");
      out.write("      <div id=\"grpcommon\" class=\"grpcommon\">\n");
      out.write("         <table id=\"dg\" class=\"easyui-datagrid\" title=\"공통코드 관리\" style=\"width:'100%';height:100%\"\n");
      out.write("                  data-options=\"singleSelect:true,\n");
      out.write("\t                            collapsible:true,\n");
      out.write("\t                            url:'./Datas/getGrpCode.jsp',\n");
      out.write("\t                            method:'get',\n");
      out.write("\t                            onClickCell: onClickCell,\n");
      out.write("\t                            onEndEdit: onEndEdit,\n");
      out.write("\t                            onSelect : onSelect,\n");
      out.write("\t                            toolbar:'#toolbar01'\n");
      out.write("\t                            \">\n");
      out.write("              <thead>\n");
      out.write("                  <tr>\n");
      out.write("                      <th data-options=\"field:'grp_id',width:'40%',align:'center'\">GRP 코드</th>\n");
      out.write("                      <th data-options=\"field:'grp_name',width:'50%',align:'center',editor:'textbox'\">GRP 이름</th>\n");
      out.write("                      <th data-options=\"field:'status',width:'10%'\"></th>\n");
      out.write("                  </tr>\n");
      out.write("              </thead>\n");
      out.write("          </table>\n");
      out.write("      </div>\n");
      out.write("      \n");
      out.write("      <div id=\"common\" class=\"common\">\n");
      out.write("      \t<table id=\"dg2\" class=\"easyui-datagrid\" title=\"공통코드\" style=\"width:'100%';height:100%\"\n");
      out.write("                  data-options=\"singleSelect:true,\n");
      out.write("                                collapsible:true,\n");
      out.write("                                onClickCell: onClickCell2,\n");
      out.write("                                onEndEdit: onEndEdit2,\n");
      out.write("                                onSelect : onSelect2,\n");
      out.write("                                toolbar : '#toolbar02'\n");
      out.write("                               \">\n");
      out.write("              <thead>\n");
      out.write("                  <tr>\n");
      out.write("                      <th data-options=\"field:'grp_id',width:'15%',align:'center'\">GRP 코드</th>\n");
      out.write("                      <th data-options=\"field:'com_id',width:'15%',align:'center'\">COM 코드</th>\n");
      out.write("                      <th data-options=\"field:'com_val',width:'15%',align:'center',editor:'textbox'\">COM 이름</th>\n");
      out.write("                      <th data-options=\"field:'com_lvl',width:'10%',align:'center',editor:'textbox'\">단계</th>\n");
      out.write("                      <th data-options=\"field:'parent_id',width:'15%'\"></th>\n");
      out.write("                      <th data-options=\"field:'status',width:'10%'\"></th>\n");
      out.write("                  </tr>\n");
      out.write("              </thead>\n");
      out.write("          </table>\n");
      out.write("      </div>\n");
      out.write("   </div>\n");
      out.write("   <div id=\"toolbar01\" style=\"height:auto\">\n");
      out.write("        <a href=\"javascript:void(0)\" class=\"easyui-linkbutton\" data-options=\"iconCls:'icon-add',plain:true\" onclick=\"append()\">추가</a>\n");
      out.write("        <a href=\"javascript:void(0)\" class=\"easyui-linkbutton\" data-options=\"iconCls:'icon-remove',plain:true\" onclick=\"removeit()\">삭제</a>\n");
      out.write("        <a href=\"javascript:void(0)\" class=\"easyui-linkbutton\" data-options=\"iconCls:'icon-save',plain:true\" onclick=\"saveit()\">저장</a>\n");
      out.write("        <a href=\"javascript:void(0)\" class=\"easyui-linkbutton\" data-options=\"iconCls:'icon-undo',plain:true\" onclick=\"reject()\">취소</a>\n");
      out.write("    </div>\n");
      out.write("   <div id=\"toolbar02\" style=\"height:auto\">\n");
      out.write("        <a href=\"javascript:void(0)\" class=\"easyui-linkbutton\" data-options=\"iconCls:'icon-add',plain:true\" onclick=\"append2()\">추가</a>\n");
      out.write("        <a href=\"javascript:void(0)\" class=\"easyui-linkbutton\" data-options=\"iconCls:'icon-remove',plain:true\" onclick=\"removeit2()\">삭제</a>\n");
      out.write("        <a href=\"javascript:void(0)\" class=\"easyui-linkbutton\" data-options=\"iconCls:'icon-save',plain:true\" onclick=\"saveit2()\">저장</a>\n");
      out.write("        <a href=\"javascript:void(0)\" class=\"easyui-linkbutton\" data-options=\"iconCls:'icon-undo',plain:true\" onclick=\"reject2()\">취소</a>\n");
      out.write("    </div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
