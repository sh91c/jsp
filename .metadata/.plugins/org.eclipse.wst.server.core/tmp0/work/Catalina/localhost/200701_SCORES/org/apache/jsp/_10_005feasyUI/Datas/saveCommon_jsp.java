/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.35
 * Generated at: 2020-07-10 00:47:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._10_005feasyUI.Datas;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import PKG_DB.DBCon;
import java.sql.*;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

public final class saveCommon_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.json.simple.JSONObject");
    _jspx_imports_classes.add("org.json.simple.parser.JSONParser");
    _jspx_imports_classes.add("PKG_DB.DBCon");
    _jspx_imports_classes.add("org.json.simple.JSONArray");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
	
	request.setCharacterEncoding("UTF-8");

	DBCon db = new DBCon("jdbc:oracle:thin:@localhost:1521:xe", "testdb2", "oracle");

	String strJSONDatas = request.getParameter("jsonDatas");
	
	out.println(strJSONDatas);
	
	JSONParser parser = new JSONParser();
	
	JSONObject jsonObj = (JSONObject)parser.parse(strJSONDatas);
	
	JSONArray arrAppend = (JSONArray)jsonObj.get("appended");
	JSONArray arrUpdate = (JSONArray)jsonObj.get("updated");
	JSONArray arrDelete = (JSONArray)jsonObj.get("deleted");
	
	
	// append
	int appendSize = arrAppend.size();
	String strProcName = " CALL PKG_SCORES.PROC_INS_COM( ?, ?, ?, ? )";
	String[] strInParams = new String[4];
	for(int i = 0; i < appendSize; i++){
		JSONObject obj = (JSONObject)arrAppend.get(i);
		
		String strGrpID = (String)obj.get("grp_id");
		String strComID = (String)obj.get("com_id");
		String strComVal = (String)obj.get("com_val");
		String strComLvl = (String)obj.get("com_lvl");
		String strParentID = (String)obj.get("parent_id");
		String strStatus = (String)obj.get("status");
		
		strInParams[0] = strGrpID; 
		strInParams[1] = strComVal; 
		strInParams[2] = strComLvl; 
		strInParams[3] = strParentID; 
		db.setUpdate(strProcName, strInParams);
	} // end append
	
	
	// delete
	int deleteSize = arrDelete.size();
	
	String strProcName2 = " CALL PKG_SCORES.PROC_DEL_COM( ?, ? )";
	String[] strInParams2 = new String[2];
	
	for(int i = 0; i < deleteSize; i++){
		JSONObject obj = (JSONObject)arrDelete.get(i);
		
		String strGrpID = (String)obj.get("grp_id");
		String strComID = (String)obj.get("com_id");
		String strComVal = (String)obj.get("com_val");
		String strComLvl = (String)obj.get("com_lvl");
		String strParentID = (String)obj.get("parent_id");
		String strStatus = (String)obj.get("status");
		
		strInParams[0] = strGrpID; 
		strInParams[1] = strComID;  
		db.setUpdate(strProcName2, strInParams2);
	} // end delete
	
	
	// update
	int updateSize = arrUpdate.size();	
	
	String strProcName3 = " CALL PKG_SCORES.PROC_UP_COM( ?, ?, ?, ? )";
	String[] strInParams3 = new String[4];
	
	for(int i = 0; i < updateSize; i++){
		JSONObject obj = (JSONObject)arrUpdate.get(i);
		
		String strGrpID = (String)obj.get("grp_id");
		String strComID = (String)obj.get("com_id");
		String strComVal = (String)obj.get("com_val");
		String strComLvl = (String)obj.get("com_lvl");
		String strParentID = (String)obj.get("parent_id");
		String strStatus = (String)obj.get("status");
		
		strInParams[0] = strGrpID; 
		strInParams[1] = strComID;
		strInParams[2] = strComVal;
		strInParams[3] = strComLvl;
		
		db.setUpdate(strProcName3, strInParams3);
	} // end update
	

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
